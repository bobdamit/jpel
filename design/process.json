{
  "id": "mic-build",
  "name": "Build a Microphone",
  "description": "Quality control process for microphone assembly with TC and TL build paths",
  "version": "2.0.0",
  "start": "a:askBuildType",
  "activities": {
    "askBuildType": {
      "id": "askBuildType",
      "name": "Collect Build Information",
      "type": "human",
      "prompt": "What type of microphone are you building?",
      "inputs": [
        {
          "name": "buildType",
          "type": "select",
          "required": true,
          "options": ["TC", "TL"],
          "description": "Type of microphone build"
        }
      ]
    },
    
    "checkBuildType": {
      "id": "checkBuildType",
      "name": "Route Based on Build Type",
      "type": "branch",
      "condition": "a:askBuildType.f:buildType === 'TC'",
      "then": "a:tcSequence",
      "else": "a:tlSequence"
    },
    
    "tcSequence": {
      "id": "tcSequence",
      "name": "TC Build Quality Checks",
      "type": "sequence",
      "activities": [
        "a:collectBiasRs",
        "a:checkR3Values"
      ]
    },
    
    "tlSequence": {
      "id": "tlSequence", 
      "name": "TL Build Quality Checks",
      "type": "sequence",
      "activities": [
        "a:measureVoltages",
        "a:validateVPolRatio"
      ]
    },
    
    "collectBiasRs": {
      "id": "collectBiasRs",
      "name": "Collect Bias Resistor Values",
      "type": "human",
      "prompt": "Measure and enter the bias resistor values",
      "inputs": [
        {
          "name": "R3Pot",
          "type": "number",
          "required": true,
          "min": 0,
          "units": "Ω",
          "description": "R3 Potentiometer resistance value"
        },
        {
          "name": "R3",
          "type": "number", 
          "required": true,
          "min": 0,
          "units": "Ω",
          "description": "R3 resistor value"
        }
      ]
    },
    
    "checkR3Values": {
      "id": "checkR3Values",
      "name": "Validate R3 Tolerance",
      "type": "compute",
      "code": [
        "const R3Pot = a:collectBiasRs.f:R3Pot;",
        "const R3 = a:collectBiasRs.f:R3;",
        "const tolerance = Math.abs(R3Pot - R3) / R3;",
        "const withinTolerance = tolerance <= 0.015;",
        "this.passFail = withinTolerance ? 'pass' : 'fail';",
        "this.data = { tolerance: tolerance, withinSpec: withinTolerance };"
      ]
    },
    
    "measureVoltages": {
      "id": "measureVoltages",
      "name": "Measure Voltage Values", 
      "type": "human",
      "prompt": "Measure the voltage values with a multimeter",
      "inputs": [
        {
          "name": "VPol",
          "type": "number",
          "required": true,
          "min": 0,
          "max": 100,
          "units": "VDC",
          "description": "Polarization voltage measurement"
        },
        {
          "name": "VPlus",
          "type": "number",
          "required": true, 
          "min": 0,
          "max": 20,
          "units": "VDC",
          "description": "Positive supply voltage measurement"
        }
      ]
    },
    
    "validateVPolRatio": {
      "id": "validateVPolRatio",
      "name": "Calculate VPol to V+ Ratio",
      "type": "compute",
      "code": [
        "const VPol = a:measureVoltages.f:VPol;",
        "const VPlus = a:measureVoltages.f:VPlus;", 
        "const ratio = VPol / VPlus;",
        "const targetRatio = 6.0;",
        "const tolerance = Math.abs(ratio - targetRatio) / targetRatio;",
        "const withinSpec = tolerance <= 0.02;",
        "this.passFail = withinSpec ? 'pass' : 'fail';",
        "this.data = { ratio: ratio, tolerance: tolerance, withinSpec: withinSpec };"
      ]
    },
    
    "finalSequence": {
      "id": "finalSequence",
      "name": "Final Quality Control",
      "type": "sequence", 
      "activities": [
        "a:finalInspection",
        "a:validateFinalQC",
        "a:completeProcess"
      ]
    },
    
    "finalInspection": {
      "id": "finalInspection",
      "name": "Final Visual Inspection",
      "type": "human",
      "prompt": "Perform final visual inspection and photo documentation",
      "inputs": [
        {
          "name": "xlrPins",
          "type": "boolean",
          "required": true,
          "description": "Are XLR pins straight and clean?"
        },
        {
          "name": "cosmetics",
          "type": "boolean", 
          "required": true,
          "description": "Are paint, badge, and cosmetics acceptable?"
        }
      ],
      "fileUploads": [
        {
          "name": "photos",
          "description": "Photos of completed microphone",
          "allowedTypes": ["image/jpeg", "image/png"],
          "maxBytes": 5242880,
          "minCount": 1,
          "maxCount": 4
        }
      ]
    },
    
    "validateFinalQC": {
      "id": "validateFinalQC",
      "name": "Validate Final QC Results",
      "type": "compute",
      "code": [
        "const xlrOk = a:finalInspection.f:xlrPins;",
        "const cosmeticsOk = a:finalInspection.f:cosmetics;",
        "const allChecksPass = xlrOk && cosmeticsOk;",
        "this.passFail = allChecksPass ? 'pass' : 'fail';",
        "this.data = { finalQCPassed: allChecksPass };"
      ]
    },
    
    "completeProcess": {
      "id": "completeProcess", 
      "name": "Complete Build Process",
      "type": "terminate",
      "reason": "Microphone build process completed",
      "result": "success"
    }
  }
}